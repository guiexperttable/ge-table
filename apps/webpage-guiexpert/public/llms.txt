# GuiExpert Table

> A UI-agnostic, performant table component library supporting Plain JS/TS, Vue3, React, Preact, Solid, Svelte, Web Component, and Angular. Offers large table support with advanced features like virtual scrolling, sorting, filtering, column/row resizing & spanning, accessibility, custom renderers, and state persistence.

## Core Library
- [@guiexpert/table (core)](https://github.com/guiexperttable/ge-table/tree/main/packages/table): The framework‚Äëagnostic foundation for all table implementations.
- [Plain JS/TS usage](https://github.com/guiexperttable/ge-table/tree/main/packages/table): Basic integration with JavaScript/TypeScript.

## Framework Adapters
- [Vue 3](https://github.com/guiexperttable/ge-table/tree/main/packages/vue3-table)
- [React](https://github.com/guiexperttable/ge-table/tree/main/packages/react-table)
- [Preact](https://github.com/guiexperttable/ge-table/tree/main/packages/preact-table)
- [Solid](https://github.com/guiexperttable/ge-table/tree/main/packages/solid-table)
- [Svelte](https://github.com/guiexperttable/ge-table/tree/main/packages/svelte-table)
- [Web Component](https://github.com/guiexperttable/ge-table/tree/main/packages/webcomponent-table)
- [Angular Adapter](https://github.com/guiexperttable/angular-table): Standalone TableComponent for Angular 14‚Äì20.

## Demos & Models
- [Demo Table Models](https://github.com/guiexperttable/ge-table/tree/main/packages/demo-table-models): Sample data, e.g., crypto-data and order-data types.

## Getting Started & Docs
- [README file](https://github.com/guiexperttable/ge-table/blob/main/README.md): Overview and project structure.
- Choose your stack and import `@guiexpert/table` + appropriate adapter.

## Optional Extras
- üîß *.md source versions of key documentation pages* (e.g., README.md) are available in repo.
- üßë‚Äçüíª *Developer community*: use issues and discussions on GitHub for support and feedback.

## Notes
- Designed for large tables and performance-first use cases.
- Supports advanced UI and accessibility features.
- Components are framework‚Äëagnostic; core stays consistent across ecosystems.
- Repository is actively maintained as of mid‚Äë2025.

