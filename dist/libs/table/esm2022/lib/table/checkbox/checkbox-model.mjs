export class CheckboxModel {
    checkedRows = [];
    getCheckedRows() {
        return this.checkedRows;
    }
    setCheckedRows(rows) {
        this.checkedRows = rows;
    }
    addCheckedRows(rows) {
        if (!this.checkedRows) {
            this.checkedRows = [];
        }
        for (const row of rows) {
            if (!this.checkedRows.includes(row)) {
                this.checkedRows.push(row);
            }
        }
    }
    checkRow(row, sel) {
        if (!this.checkedRows) {
            this.checkedRows = [];
        }
        if (sel) {
            if (!this.checkedRows.includes(row)) {
                this.checkedRows.push(row);
            }
        }
        else {
            this.removeSelectedRow(row);
        }
    }
    isRowChecked(row) {
        if (this.checkedRows) {
            return this.checkedRows.includes(row) ? "full" : "none";
        }
        return "none";
    }
    checkAll(_rows) {
        this.checkedRows = [];
    }
    removeSelectedRow(row) {
        if (this.checkedRows) {
            const idx = this.checkedRows.indexOf(row);
            if (idx > -1) {
                this.checkedRows.splice(idx, 1);
            }
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtbW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3RhYmxlL3NyYy9saWIvdGFibGUvY2hlY2tib3gvY2hlY2tib3gtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxPQUFPLGFBQWE7SUFFZCxXQUFXLEdBQWEsRUFBRSxDQUFDO0lBRXJDLGNBQWM7UUFDWixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVELGNBQWMsQ0FBQyxJQUFTO1FBQ3RCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO0lBQzFCLENBQUM7SUFHRCxjQUFjLENBQUMsSUFBUztRQUN0QixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztTQUN2QjtRQUNELEtBQUssTUFBTSxHQUFHLElBQUksSUFBSSxFQUFFO1lBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDbkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDNUI7U0FDRjtJQUNILENBQUM7SUFFRCxRQUFRLENBQUMsR0FBTSxFQUFFLEdBQVk7UUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDckIsSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7U0FDdkI7UUFDRCxJQUFJLEdBQUcsRUFBRTtZQUNQLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDbkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDNUI7U0FDRjthQUFNO1lBQ0wsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQzdCO0lBQ0gsQ0FBQztJQUdELFlBQVksQ0FBQyxHQUFNO1FBQ2pCLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNwQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztTQUN6RDtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxRQUFRLENBQUMsS0FBVTtRQUNqQixJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRU8saUJBQWlCLENBQUMsR0FBTTtRQUM5QixJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDMUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLEVBQUU7Z0JBQ1osSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQ2pDO1NBQ0Y7SUFDSCxDQUFDO0NBRUYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGVja2VkVHlwZSB9IGZyb20gXCIuLi9kYXRhL2NvbW1vbi9jaGVja2VkLXR5cGVcIjtcbmltcG9ydCB7IENoZWNrYm94TW9kZWxJZiB9IGZyb20gXCIuL2NoZWNrYm94LW1vZGVsLmlmXCI7XG5cbmV4cG9ydCBjbGFzcyBDaGVja2JveE1vZGVsPFQ+IGltcGxlbWVudHMgQ2hlY2tib3hNb2RlbElmPFQ+IHtcblxuICBwcm90ZWN0ZWQgY2hlY2tlZFJvd3M6IEFycmF5PFQ+ID0gW107XG5cbiAgZ2V0Q2hlY2tlZFJvd3MoKTogVFtdIHtcbiAgICByZXR1cm4gdGhpcy5jaGVja2VkUm93cztcbiAgfVxuXG4gIHNldENoZWNrZWRSb3dzKHJvd3M6IFRbXSkge1xuICAgIHRoaXMuY2hlY2tlZFJvd3MgPSByb3dzO1xuICB9XG5cblxuICBhZGRDaGVja2VkUm93cyhyb3dzOiBUW10pIHtcbiAgICBpZiAoIXRoaXMuY2hlY2tlZFJvd3MpIHtcbiAgICAgIHRoaXMuY2hlY2tlZFJvd3MgPSBbXTtcbiAgICB9XG4gICAgZm9yIChjb25zdCByb3cgb2Ygcm93cykge1xuICAgICAgaWYgKCF0aGlzLmNoZWNrZWRSb3dzLmluY2x1ZGVzKHJvdykpIHtcbiAgICAgICAgdGhpcy5jaGVja2VkUm93cy5wdXNoKHJvdyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY2hlY2tSb3cocm93OiBULCBzZWw6IGJvb2xlYW4pIHtcbiAgICBpZiAoIXRoaXMuY2hlY2tlZFJvd3MpIHtcbiAgICAgIHRoaXMuY2hlY2tlZFJvd3MgPSBbXTtcbiAgICB9XG4gICAgaWYgKHNlbCkge1xuICAgICAgaWYgKCF0aGlzLmNoZWNrZWRSb3dzLmluY2x1ZGVzKHJvdykpIHtcbiAgICAgICAgdGhpcy5jaGVja2VkUm93cy5wdXNoKHJvdyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlU2VsZWN0ZWRSb3cocm93KTtcbiAgICB9XG4gIH1cblxuXG4gIGlzUm93Q2hlY2tlZChyb3c6IFQpOiBDaGVja2VkVHlwZSB7XG4gICAgaWYgKHRoaXMuY2hlY2tlZFJvd3MpIHtcbiAgICAgIHJldHVybiB0aGlzLmNoZWNrZWRSb3dzLmluY2x1ZGVzKHJvdykgPyBcImZ1bGxcIiA6IFwibm9uZVwiO1xuICAgIH1cbiAgICByZXR1cm4gXCJub25lXCI7XG4gIH1cblxuICBjaGVja0FsbChfcm93czogVFtdKSB7XG4gICAgdGhpcy5jaGVja2VkUm93cyA9IFtdO1xuICB9XG5cbiAgcHJpdmF0ZSByZW1vdmVTZWxlY3RlZFJvdyhyb3c6IFQpIHtcbiAgICBpZiAodGhpcy5jaGVja2VkUm93cykge1xuICAgICAgY29uc3QgaWR4ID0gdGhpcy5jaGVja2VkUm93cy5pbmRleE9mKHJvdyk7XG4gICAgICBpZiAoaWR4ID4gLTEpIHtcbiAgICAgICAgdGhpcy5jaGVja2VkUm93cy5zcGxpY2UoaWR4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxufVxuIl19