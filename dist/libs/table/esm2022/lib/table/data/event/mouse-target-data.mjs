import { getAreaIdentByString } from "../tablemodel/area-ident.type";
export class MouseTargetData {
    rowIdx = -1;
    colIdx = -1;
    areaIdent;
    areaModel;
    row;
    value;
    action = null;
    inputType = null;
    className = "";
    constructor(eventTarget, tableScope) {
        if (eventTarget === null)
            return; // skip
        if (eventTarget instanceof HTMLDivElement
            || eventTarget instanceof HTMLSpanElement
            || eventTarget instanceof HTMLInputElement) {
            this.className = eventTarget.className;
            this.action = eventTarget.getAttribute("data-ge-action");
            this.inputType = eventTarget.getAttribute("data-input-type");
            this.rowIdx = Number(eventTarget.getAttribute("data-row-index"));
            this.colIdx = Number(eventTarget.getAttribute("data-col-index"));
            const area = eventTarget.getAttribute("data-area");
            if (area) {
                this.areaIdent = getAreaIdentByString(area);
                this.areaModel = tableScope.tableModel.getAreaModel(this.areaIdent);
                this.row = this.areaModel.getRowByIndex(this.rowIdx);
            }
            if (eventTarget instanceof HTMLInputElement) {
                const target = eventTarget;
                this.value = target.value;
            }
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91c2UtdGFyZ2V0LWRhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3RhYmxlL3NyYy9saWIvdGFibGUvZGF0YS9ldmVudC9tb3VzZS10YXJnZXQtZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWEsb0JBQW9CLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUloRixNQUFNLE9BQU8sZUFBZTtJQUUxQixNQUFNLEdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDcEIsTUFBTSxHQUFXLENBQUMsQ0FBQyxDQUFDO0lBQ3BCLFNBQVMsQ0FBYTtJQUN0QixTQUFTLENBQWU7SUFDeEIsR0FBRyxDQUFPO0lBQ1YsS0FBSyxDQUFPO0lBQ1osTUFBTSxHQUFrQixJQUFJLENBQUM7SUFDN0IsU0FBUyxHQUFrQixJQUFJLENBQUM7SUFDaEMsU0FBUyxHQUFXLEVBQUUsQ0FBQztJQUd2QixZQUNFLFdBQStCLEVBQy9CLFVBQXNCO1FBRXRCLElBQUksV0FBVyxLQUFLLElBQUk7WUFBRSxPQUFPLENBQUMsT0FBTztRQUV6QyxJQUFJLFdBQVcsWUFBWSxjQUFjO2VBQ3BDLFdBQVcsWUFBWSxlQUFlO2VBQ3RDLFdBQVcsWUFBWSxnQkFBZ0IsRUFBRTtZQUU1QyxJQUFJLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUM7WUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxXQUFXLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDekQsSUFBSSxDQUFDLFNBQVMsR0FBRyxXQUFXLENBQUMsWUFBWSxDQUFDLGlCQUFpQixDQUFDLENBQUM7WUFDN0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7WUFDakUsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7WUFDakUsTUFBTSxJQUFJLEdBQUcsV0FBVyxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNuRCxJQUFJLElBQUksRUFBRTtnQkFDUixJQUFJLENBQUMsU0FBUyxHQUFHLG9CQUFvQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM1QyxJQUFJLENBQUMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDcEUsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDdEQ7WUFDRCxJQUFJLFdBQVcsWUFBWSxnQkFBZ0IsRUFBRTtnQkFDM0MsTUFBTSxNQUFNLEdBQUcsV0FBK0IsQ0FBQztnQkFDL0MsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO2FBQzNCO1NBQ0Y7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcmVhSWRlbnQsIGdldEFyZWFJZGVudEJ5U3RyaW5nIH0gZnJvbSBcIi4uL3RhYmxlbW9kZWwvYXJlYS1pZGVudC50eXBlXCI7XG5pbXBvcnQgeyBBcmVhTW9kZWxJZiB9IGZyb20gXCIuLi90YWJsZW1vZGVsL2FyZWFtb2RlbC9hcmVhLW1vZGVsLmlmXCI7XG5pbXBvcnQgeyBUYWJsZVNjb3BlIH0gZnJvbSBcIi4uLy4uL3RhYmxlLXNjb3BlXCI7XG5cbmV4cG9ydCBjbGFzcyBNb3VzZVRhcmdldERhdGEge1xuXG4gIHJvd0lkeDogbnVtYmVyID0gLTE7XG4gIGNvbElkeDogbnVtYmVyID0gLTE7XG4gIGFyZWFJZGVudD86IEFyZWFJZGVudDtcbiAgYXJlYU1vZGVsPzogQXJlYU1vZGVsSWY7XG4gIHJvdz86IGFueTtcbiAgdmFsdWU/OiBhbnk7XG4gIGFjdGlvbjogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG4gIGlucHV0VHlwZTogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG4gIGNsYXNzTmFtZTogc3RyaW5nID0gXCJcIjtcblxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIGV2ZW50VGFyZ2V0OiBFdmVudFRhcmdldCB8IG51bGwsXG4gICAgdGFibGVTY29wZTogVGFibGVTY29wZSkge1xuXG4gICAgaWYgKGV2ZW50VGFyZ2V0ID09PSBudWxsKSByZXR1cm47IC8vIHNraXBcblxuICAgIGlmIChldmVudFRhcmdldCBpbnN0YW5jZW9mIEhUTUxEaXZFbGVtZW50XG4gICAgICB8fCBldmVudFRhcmdldCBpbnN0YW5jZW9mIEhUTUxTcGFuRWxlbWVudFxuICAgICAgfHwgZXZlbnRUYXJnZXQgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50KSB7XG5cbiAgICAgIHRoaXMuY2xhc3NOYW1lID0gZXZlbnRUYXJnZXQuY2xhc3NOYW1lO1xuICAgICAgdGhpcy5hY3Rpb24gPSBldmVudFRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWdlLWFjdGlvblwiKTtcbiAgICAgIHRoaXMuaW5wdXRUeXBlID0gZXZlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1pbnB1dC10eXBlXCIpO1xuICAgICAgdGhpcy5yb3dJZHggPSBOdW1iZXIoZXZlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1yb3ctaW5kZXhcIikpO1xuICAgICAgdGhpcy5jb2xJZHggPSBOdW1iZXIoZXZlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1jb2wtaW5kZXhcIikpO1xuICAgICAgY29uc3QgYXJlYSA9IGV2ZW50VGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtYXJlYVwiKTtcbiAgICAgIGlmIChhcmVhKSB7XG4gICAgICAgIHRoaXMuYXJlYUlkZW50ID0gZ2V0QXJlYUlkZW50QnlTdHJpbmcoYXJlYSk7XG4gICAgICAgIHRoaXMuYXJlYU1vZGVsID0gdGFibGVTY29wZS50YWJsZU1vZGVsLmdldEFyZWFNb2RlbCh0aGlzLmFyZWFJZGVudCk7XG4gICAgICAgIHRoaXMucm93ID0gdGhpcy5hcmVhTW9kZWwuZ2V0Um93QnlJbmRleCh0aGlzLnJvd0lkeCk7XG4gICAgICB9XG4gICAgICBpZiAoZXZlbnRUYXJnZXQgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50KSB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50VGFyZ2V0IGFzIEhUTUxJbnB1dEVsZW1lbnQ7XG4gICAgICAgIHRoaXMudmFsdWUgPSB0YXJnZXQudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=