export class SorterService {
    genericSortComparator(va, vb, f) {
        if (typeof va === "number" && typeof vb === "number") {
            return f * (va - vb);
        }
        if (typeof va === "string" && typeof vb === "string") {
            return f * (va.localeCompare(vb));
        }
        if (typeof va === "boolean" && typeof vb === "boolean") {
            const a = va ? -1 : 1;
            const b = vb ? -1 : 1;
            return f * (a - b);
        }
        if (va instanceof Date && vb instanceof Date) {
            return f * (va.getTime() - vb.getTime());
        }
        if (va instanceof Array && vb instanceof Array) {
            const arr1 = va;
            const arr2 = vb;
            if (arr1.length && arr2.length) {
                return this.genericSortComparator(arr1[0], arr2[0], f);
            }
        }
        return f * ("" + va).localeCompare(("" + vb));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3RhYmxlL3NyYy9saWIvdGFibGUvc2VydmljZS9zb3J0ZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLE9BQU8sYUFBYTtJQUd4QixxQkFBcUIsQ0FBQyxFQUFPLEVBQUUsRUFBTyxFQUFFLENBQVM7UUFDL0MsSUFBSSxPQUFPLEVBQUUsS0FBSyxRQUFRLElBQUksT0FBTyxFQUFFLEtBQUssUUFBUSxFQUFFO1lBQ3BELE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1NBQ3RCO1FBQ0QsSUFBSSxPQUFPLEVBQUUsS0FBSyxRQUFRLElBQUksT0FBTyxFQUFFLEtBQUssUUFBUSxFQUFFO1lBQ3BELE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ25DO1FBQ0QsSUFBSSxPQUFPLEVBQUUsS0FBSyxTQUFTLElBQUksT0FBTyxFQUFFLEtBQUssU0FBUyxFQUFFO1lBQ3RELE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0QixNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDcEI7UUFDRCxJQUFJLEVBQUUsWUFBWSxJQUFJLElBQUksRUFBRSxZQUFZLElBQUksRUFBRTtZQUM1QyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztTQUMxQztRQUNELElBQUksRUFBRSxZQUFZLEtBQUssSUFBSSxFQUFFLFlBQVksS0FBSyxFQUFFO1lBQzlDLE1BQU0sSUFBSSxHQUFlLEVBQUUsQ0FBQztZQUM1QixNQUFNLElBQUksR0FBZSxFQUFFLENBQUM7WUFDNUIsSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQzlCLE9BQU8sSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDeEQ7U0FDRjtRQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Q0FHRiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTb3J0ZXJTZXJ2aWNlIHtcblxuXG4gIGdlbmVyaWNTb3J0Q29tcGFyYXRvcih2YTogYW55LCB2YjogYW55LCBmOiBudW1iZXIpOiBudW1iZXIge1xuICAgIGlmICh0eXBlb2YgdmEgPT09IFwibnVtYmVyXCIgJiYgdHlwZW9mIHZiID09PSBcIm51bWJlclwiKSB7XG4gICAgICByZXR1cm4gZiAqICh2YSAtIHZiKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YSA9PT0gXCJzdHJpbmdcIiAmJiB0eXBlb2YgdmIgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHJldHVybiBmICogKHZhLmxvY2FsZUNvbXBhcmUodmIpKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YSA9PT0gXCJib29sZWFuXCIgJiYgdHlwZW9mIHZiID09PSBcImJvb2xlYW5cIikge1xuICAgICAgY29uc3QgYSA9IHZhID8gLTEgOiAxO1xuICAgICAgY29uc3QgYiA9IHZiID8gLTEgOiAxO1xuICAgICAgcmV0dXJuIGYgKiAoYSAtIGIpO1xuICAgIH1cbiAgICBpZiAodmEgaW5zdGFuY2VvZiBEYXRlICYmIHZiIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgcmV0dXJuIGYgKiAodmEuZ2V0VGltZSgpIC0gdmIuZ2V0VGltZSgpKTtcbiAgICB9XG4gICAgaWYgKHZhIGluc3RhbmNlb2YgQXJyYXkgJiYgdmIgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgY29uc3QgYXJyMTogQXJyYXk8YW55PiA9IHZhO1xuICAgICAgY29uc3QgYXJyMjogQXJyYXk8YW55PiA9IHZiO1xuICAgICAgaWYgKGFycjEubGVuZ3RoICYmIGFycjIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdlbmVyaWNTb3J0Q29tcGFyYXRvcihhcnIxWzBdLCBhcnIyWzBdLCBmKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGYgKiAoXCJcIiArIHZhKS5sb2NhbGVDb21wYXJlKChcIlwiICsgdmIpKTtcbiAgfVxuXG5cbn1cbiJdfQ==