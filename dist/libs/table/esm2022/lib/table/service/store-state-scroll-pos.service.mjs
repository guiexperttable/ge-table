import { AbstractStoreStateService } from "./abstract-store-state.service";
export class StoreStateScrollPosService extends AbstractStoreStateService {
    SCROLL_STATE = "scrollState";
    scrollOffset = [0, 0];
    constructor(fn) {
        super(fn);
        this.load();
    }
    getScrollOffset() {
        return this.scrollOffset;
    }
    updateScrollOffset(xy) {
        this.scrollOffset = xy;
        this.checkAndPersistItem(this.SCROLL_STATE, this.scrollOffset);
    }
    load() {
        const fn = this.getStorageKeyFn;
        if (fn) {
            const key = fn();
            if (key) {
                // A main key is given by function from options
                const subKey4 = key + this.SCROLL_STATE;
                let scrollOffset = this.loadFromLocalStorage(subKey4);
                this.scrollOffset = scrollOffset ? scrollOffset : [0, 0];
            }
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtc3RhdGUtc2Nyb2xsLXBvcy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy90YWJsZS9zcmMvbGliL3RhYmxlL3NlcnZpY2Uvc3RvcmUtc3RhdGUtc2Nyb2xsLXBvcy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBSTNFLE1BQU0sT0FBTywwQkFBMkIsU0FBUSx5QkFBeUI7SUFFdEQsWUFBWSxHQUFHLGFBQWEsQ0FBQztJQUN0QyxZQUFZLEdBQXFCLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBR2hELFlBQVksRUFBK0I7UUFDekMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ1YsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQUVELGVBQWU7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztJQUVELGtCQUFrQixDQUFDLEVBQW9CO1FBQ3JDLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBR2tCLElBQUk7UUFDckIsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQztRQUNoQyxJQUFJLEVBQUUsRUFBRTtZQUNOLE1BQU0sR0FBRyxHQUFHLEVBQUUsRUFBRSxDQUFDO1lBQ2pCLElBQUksR0FBRyxFQUFFO2dCQUNQLCtDQUErQztnQkFDL0MsTUFBTSxPQUFPLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7Z0JBQ3hDLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBbUIsT0FBTyxDQUFDLENBQUM7Z0JBQ3hFLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQzFEO1NBQ0Y7SUFDSCxDQUFDO0NBR0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnN0cmFjdFN0b3JlU3RhdGVTZXJ2aWNlIH0gZnJvbSBcIi4vYWJzdHJhY3Qtc3RvcmUtc3RhdGUuc2VydmljZVwiO1xuaW1wb3J0IHsgR2V0U3RvcmFnZUtleUZuIH0gZnJvbSBcIi4uL2RhdGEvb3B0aW9ucy9hdXRvLXJlc3RvcmUtb3B0aW9ucy5pZlwiO1xuXG5cbmV4cG9ydCBjbGFzcyBTdG9yZVN0YXRlU2Nyb2xsUG9zU2VydmljZSBleHRlbmRzIEFic3RyYWN0U3RvcmVTdGF0ZVNlcnZpY2Uge1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgU0NST0xMX1NUQVRFID0gXCJzY3JvbGxTdGF0ZVwiO1xuICBwcml2YXRlIHNjcm9sbE9mZnNldDogW251bWJlciwgbnVtYmVyXSA9IFswLCAwXTtcblxuXG4gIGNvbnN0cnVjdG9yKGZuOiBHZXRTdG9yYWdlS2V5Rm4gfCB1bmRlZmluZWQpIHtcbiAgICBzdXBlcihmbik7XG4gICAgdGhpcy5sb2FkKCk7XG4gIH1cblxuICBnZXRTY3JvbGxPZmZzZXQoKTogW251bWJlciwgbnVtYmVyXSB7XG4gICAgcmV0dXJuIHRoaXMuc2Nyb2xsT2Zmc2V0O1xuICB9XG5cbiAgdXBkYXRlU2Nyb2xsT2Zmc2V0KHh5OiBbbnVtYmVyLCBudW1iZXJdKSB7XG4gICAgdGhpcy5zY3JvbGxPZmZzZXQgPSB4eTtcbiAgICB0aGlzLmNoZWNrQW5kUGVyc2lzdEl0ZW0odGhpcy5TQ1JPTExfU1RBVEUsIHRoaXMuc2Nyb2xsT2Zmc2V0KTtcbiAgfVxuXG5cbiAgcHJvdGVjdGVkIG92ZXJyaWRlIGxvYWQoKSB7XG4gICAgY29uc3QgZm4gPSB0aGlzLmdldFN0b3JhZ2VLZXlGbjtcbiAgICBpZiAoZm4pIHtcbiAgICAgIGNvbnN0IGtleSA9IGZuKCk7XG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIC8vIEEgbWFpbiBrZXkgaXMgZ2l2ZW4gYnkgZnVuY3Rpb24gZnJvbSBvcHRpb25zXG4gICAgICAgIGNvbnN0IHN1YktleTQgPSBrZXkgKyB0aGlzLlNDUk9MTF9TVEFURTtcbiAgICAgICAgbGV0IHNjcm9sbE9mZnNldCA9IHRoaXMubG9hZEZyb21Mb2NhbFN0b3JhZ2U8W251bWJlciwgbnVtYmVyXT4oc3ViS2V5NCk7XG4gICAgICAgIHRoaXMuc2Nyb2xsT2Zmc2V0ID0gc2Nyb2xsT2Zmc2V0ID8gc2Nyb2xsT2Zmc2V0IDogWzAsIDBdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG5cbn1cbiJdfQ==