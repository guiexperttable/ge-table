export class CheckboxCellRenderer {
    render(cellDiv, rowIndex, columnIndex, areaIdent, areaModel, _cellValue, domService) {
        if (areaModel.isRowCheckable(rowIndex)) {
            domService.addClass(cellDiv, "ge-table-row-checkbox-div");
            const rowChecked = areaModel.isRowChecked(rowIndex);
            const checked = (rowChecked === "full") ? "checked" : "";
            const semi = (rowChecked === "semi") ? "<span style=\"opacity: 0.4;\">âœ“<span>" : "";
            cellDiv.innerHTML = `
        <input
            type="checkbox"
            data-area="${areaIdent}"
            data-row-index="${rowIndex}"
            data-col-index="${columnIndex}"
            data-input-type="checkbox"
            ${checked}
            class="ge-table-row-checkbox">
        ${semi}  `;
        }
        return undefined;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtY2VsbC1yZW5kZXJlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdGFibGUvc3JjL2xpYi90YWJsZS9yZW5kZXJlci9jaGVja2JveC1jZWxsLXJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE1BQU0sT0FBTyxvQkFBb0I7SUFFL0IsTUFBTSxDQUNKLE9BQXVCLEVBQ3ZCLFFBQWdCLEVBQ2hCLFdBQW1CLEVBQ25CLFNBQW9CLEVBQ3BCLFNBQXNCLEVBQ3RCLFVBQWUsRUFDZixVQUF3QjtRQUV4QixJQUFJLFNBQVMsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDdEMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsMkJBQTJCLENBQUMsQ0FBQztZQUMxRCxNQUFNLFVBQVUsR0FBRyxTQUFTLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3BELE1BQU0sT0FBTyxHQUFHLENBQUMsVUFBVSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztZQUN6RCxNQUFNLElBQUksR0FBRyxDQUFDLFVBQVUsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsdUNBQXVDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztZQUNwRixPQUFPLENBQUMsU0FBUyxHQUFHOzs7eUJBR0QsU0FBUzs4QkFDSixRQUFROzhCQUNSLFdBQVc7O2NBRTNCLE9BQU87O1VBRVgsSUFBSSxJQUFJLENBQUM7U0FDZDtRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7Q0FHRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFyZWFNb2RlbElmIH0gZnJvbSBcIi4uL2RhdGEvdGFibGVtb2RlbC9hcmVhbW9kZWwvYXJlYS1tb2RlbC5pZlwiO1xuaW1wb3J0IHsgQ2VsbFJlbmRlcmVySWYgfSBmcm9tIFwiLi9jZWxsLXJlbmRlci5pZlwiO1xuaW1wb3J0IHsgRG9tU2VydmljZUlmIH0gZnJvbSBcIi4uL3NlcnZpY2UvZG9tLXNlcnZpY2UuaWZcIjtcbmltcG9ydCB7IEFyZWFJZGVudCB9IGZyb20gXCIuLi9kYXRhL3RhYmxlbW9kZWwvYXJlYS1pZGVudC50eXBlXCI7XG5pbXBvcnQgeyBSZW5kZXJlckNsZWFudXBGblR5cGUgfSBmcm9tIFwiLi9yZW5kZXJlci1jbGVhbnVwLWZuLnR5cGVcIjtcblxuXG5leHBvcnQgY2xhc3MgQ2hlY2tib3hDZWxsUmVuZGVyZXIgaW1wbGVtZW50cyBDZWxsUmVuZGVyZXJJZiB7XG5cbiAgcmVuZGVyKFxuICAgIGNlbGxEaXY6IEhUTUxEaXZFbGVtZW50LFxuICAgIHJvd0luZGV4OiBudW1iZXIsXG4gICAgY29sdW1uSW5kZXg6IG51bWJlcixcbiAgICBhcmVhSWRlbnQ6IEFyZWFJZGVudCxcbiAgICBhcmVhTW9kZWw6IEFyZWFNb2RlbElmLFxuICAgIF9jZWxsVmFsdWU6IGFueSxcbiAgICBkb21TZXJ2aWNlOiBEb21TZXJ2aWNlSWYpOiBSZW5kZXJlckNsZWFudXBGblR5cGUgfCB1bmRlZmluZWQge1xuXG4gICAgaWYgKGFyZWFNb2RlbC5pc1Jvd0NoZWNrYWJsZShyb3dJbmRleCkpIHtcbiAgICAgIGRvbVNlcnZpY2UuYWRkQ2xhc3MoY2VsbERpdiwgXCJnZS10YWJsZS1yb3ctY2hlY2tib3gtZGl2XCIpO1xuICAgICAgY29uc3Qgcm93Q2hlY2tlZCA9IGFyZWFNb2RlbC5pc1Jvd0NoZWNrZWQocm93SW5kZXgpO1xuICAgICAgY29uc3QgY2hlY2tlZCA9IChyb3dDaGVja2VkID09PSBcImZ1bGxcIikgPyBcImNoZWNrZWRcIiA6IFwiXCI7XG4gICAgICBjb25zdCBzZW1pID0gKHJvd0NoZWNrZWQgPT09IFwic2VtaVwiKSA/IFwiPHNwYW4gc3R5bGU9XFxcIm9wYWNpdHk6IDAuNDtcXFwiPuKckzxzcGFuPlwiIDogXCJcIjtcbiAgICAgIGNlbGxEaXYuaW5uZXJIVE1MID0gYFxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICBkYXRhLWFyZWE9XCIke2FyZWFJZGVudH1cIlxuICAgICAgICAgICAgZGF0YS1yb3ctaW5kZXg9XCIke3Jvd0luZGV4fVwiXG4gICAgICAgICAgICBkYXRhLWNvbC1pbmRleD1cIiR7Y29sdW1uSW5kZXh9XCJcbiAgICAgICAgICAgIGRhdGEtaW5wdXQtdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICR7Y2hlY2tlZH1cbiAgICAgICAgICAgIGNsYXNzPVwiZ2UtdGFibGUtcm93LWNoZWNrYm94XCI+XG4gICAgICAgICR7c2VtaX0gIGA7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuXG59XG4iXX0=