export class NumberCellRenderer {
    min;
    max;
    constructor(min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {
        this.min = min;
        this.max = max;
    }
    render(cellDiv, _rowIndex, _columnIndex, _areaIdent, _areaModel, cellValue, domService) {
        if (cellValue) {
            cellDiv.innerText = cellValue;
            if (typeof cellValue === "string"
                || isNaN(cellValue)
                || cellValue < this.min
                || cellValue > this.max) {
                domService.addClass(cellDiv, "ge-cell-error");
            }
        }
        return undefined;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLWNlbGwtcmVuZGVyZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3RhYmxlL3NyYy9saWIvdGFibGUvcmVuZGVyZXIvbnVtYmVyLWNlbGwtcmVuZGVyZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0EsTUFBTSxPQUFPLGtCQUFrQjtJQUdqQjtJQUNBO0lBRlosWUFDWSxNQUFjLE1BQU0sQ0FBQyxnQkFBZ0IsRUFDckMsTUFBYyxNQUFNLENBQUMsZ0JBQWdCO1FBRHJDLFFBQUcsR0FBSCxHQUFHLENBQWtDO1FBQ3JDLFFBQUcsR0FBSCxHQUFHLENBQWtDO0lBQ2pELENBQUM7SUFFRCxNQUFNLENBQ0osT0FBdUIsRUFDdkIsU0FBaUIsRUFDakIsWUFBb0IsRUFDcEIsVUFBcUIsRUFDckIsVUFBdUIsRUFDdkIsU0FBYyxFQUNkLFVBQXdCO1FBRXhCLElBQUksU0FBUyxFQUFFO1lBQ2IsT0FBTyxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7WUFDOUIsSUFBSSxPQUFPLFNBQVMsS0FBSyxRQUFRO21CQUM1QixLQUFLLENBQUMsU0FBUyxDQUFDO21CQUNoQixTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUc7bUJBQ3BCLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUN2QjtnQkFDQSxVQUFVLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxlQUFlLENBQUMsQ0FBQzthQUMvQztTQUNGO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztDQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2VsbFJlbmRlcmVySWYgfSBmcm9tIFwiLi9jZWxsLXJlbmRlci5pZlwiO1xuaW1wb3J0IHsgQXJlYU1vZGVsSWYgfSBmcm9tIFwiLi4vZGF0YS90YWJsZW1vZGVsL2FyZWFtb2RlbC9hcmVhLW1vZGVsLmlmXCI7XG5pbXBvcnQgeyBEb21TZXJ2aWNlSWYgfSBmcm9tIFwiLi4vc2VydmljZS9kb20tc2VydmljZS5pZlwiO1xuaW1wb3J0IHsgQXJlYUlkZW50IH0gZnJvbSBcIi4uL2RhdGEvdGFibGVtb2RlbC9hcmVhLWlkZW50LnR5cGVcIjtcbmltcG9ydCB7IFJlbmRlcmVyQ2xlYW51cEZuVHlwZSB9IGZyb20gXCIuL3JlbmRlcmVyLWNsZWFudXAtZm4udHlwZVwiO1xuXG5cbmV4cG9ydCBjbGFzcyBOdW1iZXJDZWxsUmVuZGVyZXIgaW1wbGVtZW50cyBDZWxsUmVuZGVyZXJJZiB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIG1pbjogbnVtYmVyID0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVIsXG4gICAgcHJvdGVjdGVkIG1heDogbnVtYmVyID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpIHtcbiAgfVxuXG4gIHJlbmRlcihcbiAgICBjZWxsRGl2OiBIVE1MRGl2RWxlbWVudCxcbiAgICBfcm93SW5kZXg6IG51bWJlcixcbiAgICBfY29sdW1uSW5kZXg6IG51bWJlcixcbiAgICBfYXJlYUlkZW50OiBBcmVhSWRlbnQsXG4gICAgX2FyZWFNb2RlbDogQXJlYU1vZGVsSWYsXG4gICAgY2VsbFZhbHVlOiBhbnksXG4gICAgZG9tU2VydmljZTogRG9tU2VydmljZUlmKTogUmVuZGVyZXJDbGVhbnVwRm5UeXBlIHwgdW5kZWZpbmVkIHtcblxuICAgIGlmIChjZWxsVmFsdWUpIHtcbiAgICAgIGNlbGxEaXYuaW5uZXJUZXh0ID0gY2VsbFZhbHVlO1xuICAgICAgaWYgKHR5cGVvZiBjZWxsVmFsdWUgPT09IFwic3RyaW5nXCJcbiAgICAgICAgfHwgaXNOYU4oY2VsbFZhbHVlKVxuICAgICAgICB8fCBjZWxsVmFsdWUgPCB0aGlzLm1pblxuICAgICAgICB8fCBjZWxsVmFsdWUgPiB0aGlzLm1heFxuICAgICAgKSB7XG4gICAgICAgIGRvbVNlcnZpY2UuYWRkQ2xhc3MoY2VsbERpdiwgXCJnZS1jZWxsLWVycm9yXCIpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbn1cblxuIl19